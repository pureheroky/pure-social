services:
  db:
    image: postgres:14
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test:
        ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:8
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  auth:
    build: .
    command: python -m uvicorn services.auth.auth_main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/v1/auth/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 3s

  user:
    build: .
    command: python -m uvicorn services.users.users_main:app --host 0.0.0.0 --port 8001
    ports:
      - "8001:8001"
    environment:
      - PYTHONPATH=/app
    restart: unless-stopped
    depends_on:
      # - auth
      auth:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/v1/user/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 3s

  post:
    build: .
    command: python -m uvicorn services.posts.posts_main:app --host 0.0.0.0 --port 8002
    ports:
      - "8002:8002"
    environment:
      - PYTHONPATH=/app
    restart: unless-stopped
    depends_on:
      # - user
      user:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/v1/post/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 3s

volumes:
  postgres_data:
